using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SPlanAdquisicion.Controllers
{
    /// <summary>
    /// A class which represents the PlanAdquisicionValidator.
	/// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

	public class PlanAdquisicionValidator : AbstractValidator<JObject>
	{
		public PlanAdquisicionValidator() 
		{
			RuleFor(plan_adquisicion => plan_adquisicion["tipoAdquisicion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["tipoAdquisicion"].ToString(), typeof(Int64)); });
			RuleFor(plan_adquisicion => plan_adquisicion["categoriaAdquisicion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["categoriaAdquisicion"].ToString(), typeof(Int64)); });
			RuleFor(plan_adquisicion => plan_adquisicion["unidadMedida"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["unidadMedida"].ToString(), typeof(String)); }).MaximumLength(30);
			RuleFor(plan_adquisicion => plan_adquisicion["cantidad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["cantidad"].ToString(), typeof(Int64)); });
			RuleFor(plan_adquisicion => plan_adquisicion["total"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["total"].ToString(), typeof(decimal)); });
			RuleFor(plan_adquisicion => plan_adquisicion["precioUnitario"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["precioUnitario"].ToString(), typeof(decimal)); });
			RuleFor(plan_adquisicion => plan_adquisicion["preparacionDocPlanificado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["preparacionDocPlanificado"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["preparacionDocReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["preparacionDocReal"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["lanzamientoEventoPlanificado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["lanzamientoEventoPlanificado"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["lanzamientoEventoReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["lanzamientoEventoReal"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["recepcionOfertasPlanificado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["recepcionOfertasPlanificado"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["recepcionOfertasReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["recepcionOfertasReal"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["adjudicacionPlanificado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["adjudicacionPlanificado"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["adjudicacionReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["adjudicacionReal"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["firmaContratoPlanificado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["firmaContratoPlanificado"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["firmaContratoReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["firmaContratoReal"].ToString(), typeof(DateTime)); });
			RuleFor(plan_adquisicion => plan_adquisicion["objetoId"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["objetoId"].ToString(), typeof(Int64)); });
			RuleFor(plan_adquisicion => plan_adquisicion["objetoTipo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["objetoTipo"].ToString(), typeof(Int64)); });
			RuleFor(plan_adquisicion => plan_adquisicion["bloqueado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["bloqueado"].ToString(), typeof(Int32)); });
			RuleFor(plan_adquisicion => plan_adquisicion["numeroContrato"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["numeroContrato"].ToString(), typeof(String)); }).MaximumLength(45);
			RuleFor(plan_adquisicion => plan_adquisicion["montoContrato"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["montoContrato"].ToString(), typeof(decimal)); });
			RuleFor(plan_adquisicion => plan_adquisicion["nog"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["nog"].ToString(), typeof(Int32)); });
			RuleFor(plan_adquisicion => plan_adquisicion["tipoRevision"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((plan_adquisicion, type) => { return GenericValidatorType.ValidateType(plan_adquisicion["tipoRevision"].ToString(), typeof(Int32)); });
			
		}
	}
}
