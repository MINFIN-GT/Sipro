using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SSubproductoPropiedad.Controllers
{
    /// <summary>
    /// A class which represents the SubproductoPropiedadValidator.
	/// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

	public class SubproductoPropiedadValidator : AbstractValidator<JObject>
	{
		public SubproductoPropiedadValidator() 
		{
			//RuleFor(subproducto_propiedad => subproducto_propiedad["id"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'id' to type " + typeof(Int32));
			RuleFor(subproducto_propiedad => subproducto_propiedad["nombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(String)); }).WithMessage("Error when trying to parse the property 'nombre' to type " + typeof(String)).MaximumLength(1000);
			RuleFor(subproducto_propiedad => subproducto_propiedad["descripcion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(String)); }).WithMessage("Error when trying to parse the property 'descripcion' to type " + typeof(String)).MaximumLength(2000);
			//RuleFor(subproducto_propiedad => subproducto_propiedad["usuarioCreo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioCreo' to type " + typeof(String)).MaximumLength(30);
			//RuleFor(subproducto_propiedad => subproducto_propiedad["usuarioActualizo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioActualizo' to type " + typeof(String)).MaximumLength(30);
			//RuleFor(subproducto_propiedad => subproducto_propiedad["fechaCreacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCreacion' to type " + typeof(DateTime));
			//RuleFor(subproducto_propiedad => subproducto_propiedad["fechaActualizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaActualizacion' to type " + typeof(DateTime));
			//RuleFor(subproducto_propiedad => subproducto_propiedad["estado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'estado' to type " + typeof(Int32));
			RuleFor(subproducto_propiedad => subproducto_propiedad["datoTipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto_propiedad => { return GenericValidatorType.ValidateType(subproducto_propiedad, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'datoTipoid' to type " + typeof(Int32));
			
		}
	}
}
