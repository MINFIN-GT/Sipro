using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SColaborador.Controllers
{
    /// <summary>
    /// A class which represents the ColaboradorValidator.
	/// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

	public class ColaboradorValidator : AbstractValidator<JObject>
	{
		public ColaboradorValidator() 
		{
			RuleFor(colaborador => colaborador["id"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'id' to type " + typeof(Int32));
			RuleFor(colaborador => colaborador["pnombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(String)); }).WithMessage("Error when trying to parse the property 'pnombre' to type " + typeof(String)).MaximumLength(255);
			RuleFor(colaborador => colaborador["snombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(String)); }).WithMessage("Error when trying to parse the property 'snombre' to type " + typeof(String)).MaximumLength(255);
			RuleFor(colaborador => colaborador["papellido"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(String)); }).WithMessage("Error when trying to parse the property 'papellido' to type " + typeof(String)).MaximumLength(255);
			RuleFor(colaborador => colaborador["sapellido"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(String)); }).WithMessage("Error when trying to parse the property 'sapellido' to type " + typeof(String)).MaximumLength(255);
			RuleFor(colaborador => colaborador["cui"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(Int64)); }).WithMessage("Error when trying to parse the property 'cui' to type " + typeof(Int64));
			RuleFor(colaborador => colaborador["ueunidadEjecutora"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ueunidadEjecutora' to type " + typeof(Int32));
			RuleFor(colaborador => colaborador["usuariousuario"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuariousuario' to type " + typeof(String)).MaximumLength(30);
			RuleFor(colaborador => colaborador["estado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'estado' to type " + typeof(Int32));
			RuleFor(colaborador => colaborador["usuarioCreo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioCreo' to type " + typeof(String)).MaximumLength(30);
			RuleFor(colaborador => colaborador["usuarioActualizo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioActualizo' to type " + typeof(String)).MaximumLength(30);
			RuleFor(colaborador => colaborador["fechaCreacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCreacion' to type " + typeof(DateTime));
			RuleFor(colaborador => colaborador["fechaActualizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaActualizacion' to type " + typeof(DateTime));
			RuleFor(colaborador => colaborador["ejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ejercicio' to type " + typeof(Int32));
			RuleFor(colaborador => colaborador["entidad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(colaborador => { return GenericValidatorType.ValidateType(colaborador, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'entidad' to type " + typeof(Int32));
			
		}
	}
}
