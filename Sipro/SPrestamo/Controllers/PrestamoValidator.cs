using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SPrestamo.Controllers
{
    /// <summary>
    /// A class which represents the PrestamoValidator.
	/// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

	public class PrestamoValidator : AbstractValidator<JObject>
	{
		public PrestamoValidator() 
		{
			RuleFor(prestamo => prestamo["fechaCorte"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaCorte"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["codigoPresupuestario"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["codigoPresupuestario"].ToString(), typeof(Int64)); });
			RuleFor(prestamo => prestamo["numeroPrestamo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["numeroPrestamo"].ToString(), typeof(String)); }).MaximumLength(30);
			RuleFor(prestamo => prestamo["destino"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["destino"].ToString(), typeof(String)); }).MaximumLength(1000);
			RuleFor(prestamo => prestamo["sectorEconomico"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["sectorEconomico"].ToString(), typeof(String)); }).MaximumLength(1000);
			RuleFor(prestamo => prestamo["ueunidadEjecutora"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["ueunidadEjecutora"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["fechaFirma"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaFirma"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["autorizacionTipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["autorizacionTipoid"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["numeroAutorizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["numeroAutorizacion"].ToString(), typeof(String)); }).MaximumLength(100);
			RuleFor(prestamo => prestamo["fechaAutorizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaAutorizacion"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["aniosPlazo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["aniosPlazo"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["aniosGracia"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["aniosGracia"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["fechaFinEjecucion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaFinEjecucion"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["peridoEjecucion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["peridoEjecucion"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["interesTipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["interesTipoid"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["porcentajeInteres"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["porcentajeInteres"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["porcentajeComisionCompra"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["porcentajeComisionCompra"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["tipoMonedaid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["tipoMonedaid"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["montoContratado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoContratado"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["amortizado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["amortizado"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["porAmortizar"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["porAmortizar"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["principalAnio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["principalAnio"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["interesesAnio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["interesesAnio"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["comisionCompromisoAnio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["comisionCompromisoAnio"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["otrosGastos"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["otrosGastos"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["principalAcumulado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["principalAcumulado"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["interesesAcumulados"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["interesesAcumulados"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["comisionCompromisoAcumulado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["comisionCompromisoAcumulado"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["otrosCargosAcumulados"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["otrosCargosAcumulados"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoAsignadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoAsignadoFunc"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoAsignadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoAsignadoInv"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoModificadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoModificadoFunc"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoModificadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoModificadoInv"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoVigenteFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoVigenteFunc"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoVigenteInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoVigenteInv"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoDevengadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoDevengadoFunc"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoDevengadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoDevengadoInv"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoPagadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoPagadoFunc"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["presupuestoPagadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["presupuestoPagadoInv"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["saldoCuentas"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["saldoCuentas"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["desembolsadoReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["desembolsadoReal"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["ejecucionEstadoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["ejecucionEstadoid"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["proyectoPrograma"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["proyectoPrograma"].ToString(), typeof(String)); }).MaximumLength(100);
			RuleFor(prestamo => prestamo["fechaDecreto"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaDecreto"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["fechaSuscripcion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaSuscripcion"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["fechaElegibilidadUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaElegibilidadUe"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["fechaCierreOrigianlUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaCierreOrigianlUe"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["fechaCierreActualUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaCierreActualUe"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["mesesProrrogaUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["mesesProrrogaUe"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["plazoEjecucionUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["plazoEjecucionUe"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["montoAsignadoUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoAsignadoUe"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["desembolsoAFechaUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["desembolsoAFechaUe"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["montoPorDesembolsarUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoPorDesembolsarUe"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["fechaVigencia"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["fechaVigencia"].ToString(), typeof(DateTime)); });
			RuleFor(prestamo => prestamo["montoContratadoUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoContratadoUsd"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["montoContratadoQtz"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoContratadoQtz"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["desembolsoAFechaUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["desembolsoAFechaUsd"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["montoPorDesembolsarUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoPorDesembolsarUsd"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["montoAsignadoUeUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoAsignadoUeUsd"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["montoAsignadoUeQtz"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoAsignadoUeQtz"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["desembolsoAFechaUeUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["desembolsoAFechaUeUsd"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["montoPorDesembolsarUeUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["montoPorDesembolsarUeUsd"].ToString(), typeof(decimal)); });
			RuleFor(prestamo => prestamo["entidad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["entidad"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["ejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["ejercicio"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["objetivo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["objetivo"].ToString(), typeof(String)); }).MaximumLength(4000);
			RuleFor(prestamo => prestamo["objetivoEspecifico"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["objetivoEspecifico"].ToString(), typeof(String)); }).MaximumLength(4000);
			RuleFor(prestamo => prestamo["porcentajeAvance"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["porcentajeAvance"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["cooperantecodigo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["cooperantecodigo"].ToString(), typeof(Int32)); });
			RuleFor(prestamo => prestamo["cooperanteejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must((prestamo, type) => { return GenericValidatorType.ValidateType(prestamo["cooperanteejercicio"].ToString(), typeof(Int32)); });
			
		}
	}
}
