using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SPrestamo.Controllers
{
    /// <summary>
    /// A class which represents the PrestamoValidator.
	/// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

	public class PrestamoValidator : AbstractValidator<JObject>
	{
		public PrestamoValidator() 
		{
            RuleFor(prestamo => prestamo["id"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'id' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["fechaCorte"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCorte' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["codigoPresupuestario"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int64)); }).WithMessage("Error when trying to parse the property 'codigoPresupuestario' to type " + typeof(Int64));
            RuleFor(prestamo => prestamo["numeroPrestamo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'numeroPrestamo' to type " + typeof(String)).MaximumLength(30);
            RuleFor(prestamo => prestamo["destino"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'destino' to type " + typeof(String)).MaximumLength(1000);
            RuleFor(prestamo => prestamo["sectorEconomico"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'sectorEconomico' to type " + typeof(String)).MaximumLength(1000);
            RuleFor(prestamo => prestamo["fechaFirma"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaFirma' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["autorizacionTipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'autorizacionTipoid' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["numeroAutorizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'numeroAutorizacion' to type " + typeof(String)).MaximumLength(100);
            RuleFor(prestamo => prestamo["fechaAutorizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaAutorizacion' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["aniosPlazo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'aniosPlazo' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["aniosGracia"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'aniosGracia' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["fechaFinEjecucion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaFinEjecucion' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["peridoEjecucion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'peridoEjecucion' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["interesTipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'interesTipoid' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["porcentajeInteres"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'porcentajeInteres' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["porcentajeComisionCompra"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'porcentajeComisionCompra' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["tipoMonedaid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'tipoMonedaid' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["montoContratado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoContratado' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["amortizado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'amortizado' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["porAmortizar"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'porAmortizar' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["principalAnio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'principalAnio' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["interesesAnio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'interesesAnio' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["comisionCompromisoAnio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'comisionCompromisoAnio' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["otrosGastos"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'otrosGastos' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["principalAcumulado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'principalAcumulado' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["interesesAcumulados"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'interesesAcumulados' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["comisionCompromisoAcumulado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'comisionCompromisoAcumulado' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["otrosCargosAcumulados"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'otrosCargosAcumulados' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoAsignadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoAsignadoFunc' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoAsignadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoAsignadoInv' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoModificadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoModificadoFunc' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoModificadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoModificadoInv' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoVigenteFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoVigenteFunc' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoVigenteInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoVigenteInv' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoDevengadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoDevengadoFunc' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoDevengadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoDevengadoInv' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoPagadoFunc"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoPagadoFunc' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["presupuestoPagadoInv"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'presupuestoPagadoInv' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["saldoCuentas"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'saldoCuentas' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["desembolsadoReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'desembolsadoReal' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["ejecucionEstadoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ejecucionEstadoid' to type " + typeof(Int32));
            //RuleFor(prestamo => prestamo["usuarioCreo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioCreo' to type " + typeof(String)).MaximumLength(30);
            //RuleFor(prestamo => prestamo["usuarioActualizo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioActualizo' to type " + typeof(String)).MaximumLength(30);
            //RuleFor(prestamo => prestamo["fechaCreacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCreacion' to type " + typeof(DateTime));
            //RuleFor(prestamo => prestamo["fechaActualizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaActualizacion' to type " + typeof(DateTime));
            //RuleFor(prestamo => prestamo["estado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'estado' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["proyectoPrograma"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'proyectoPrograma' to type " + typeof(String)).MaximumLength(100);
            RuleFor(prestamo => prestamo["fechaDecreto"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaDecreto' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["fechaSuscripcion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaSuscripcion' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["fechaElegibilidadUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaElegibilidadUe' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["fechaCierreOrigianlUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCierreOrigianlUe' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["fechaCierreActualUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCierreActualUe' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["mesesProrrogaUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'mesesProrrogaUe' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["plazoEjecucionUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'plazoEjecucionUe' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["montoAsignadoUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoAsignadoUe' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["desembolsoAFechaUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'desembolsoAFechaUe' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["montoPorDesembolsarUe"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoPorDesembolsarUe' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["fechaVigencia"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaVigencia' to type " + typeof(DateTime));
            RuleFor(prestamo => prestamo["montoContratadoUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoContratadoUsd' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["montoContratadoQtz"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoContratadoQtz' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["desembolsoAFechaUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'desembolsoAFechaUsd' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["montoPorDesembolsarUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoPorDesembolsarUsd' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["montoAsignadoUeUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoAsignadoUeUsd' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["montoAsignadoUeQtz"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoAsignadoUeQtz' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["desembolsoAFechaUeUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'desembolsoAFechaUeUsd' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["montoPorDesembolsarUeUsd"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'montoPorDesembolsarUeUsd' to type " + typeof(decimal));
            RuleFor(prestamo => prestamo["objetivo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'objetivo' to type " + typeof(String)).MaximumLength(4000);
            RuleFor(prestamo => prestamo["objetivoEspecifico"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(String)); }).WithMessage("Error when trying to parse the property 'objetivoEspecifico' to type " + typeof(String)).MaximumLength(4000);
            RuleFor(prestamo => prestamo["porcentajeAvance"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'porcentajeAvance' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["cooperantecodigo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'cooperantecodigo' to type " + typeof(Int32));
            RuleFor(prestamo => prestamo["cooperanteejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(prestamo => { return GenericValidatorType.ValidateType(prestamo, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'cooperanteejercicio' to type " + typeof(Int32));

        }
    }
}
