using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SSubproducto.Controllers
{
    /// <summary>
    /// A class which represents the SubproductoValidator.
	/// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

	public class SubproductoValidator : AbstractValidator<JObject>
	{
		public SubproductoValidator() 
		{
			RuleFor(subproducto => subproducto["id"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'id' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["nombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'nombre' to type " + typeof(String)).MaximumLength(1000);
			RuleFor(subproducto => subproducto["descripcion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'descripcion' to type " + typeof(String)).MaximumLength(4000);
			RuleFor(subproducto => subproducto["usuarioCreo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioCreo' to type " + typeof(String)).MaximumLength(30);
			RuleFor(subproducto => subproducto["usuarioActualizo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'usuarioActualizo' to type " + typeof(String)).MaximumLength(30);
			RuleFor(subproducto => subproducto["fechaCreacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaCreacion' to type " + typeof(DateTime));
			RuleFor(subproducto => subproducto["fechaActualizacion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaActualizacion' to type " + typeof(DateTime));
			RuleFor(subproducto => subproducto["estado"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'estado' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["snip"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'snip' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["programa"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'programa' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["subprograma"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'subprograma' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["proyecto"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'proyecto' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["actividad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'actividad' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["obra"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'obra' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["productoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'productoid' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["subproductoTipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'subproductoTipoid' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["ueunidadEjecutora"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ueunidadEjecutora' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["latitud"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'latitud' to type " + typeof(String)).MaximumLength(30);
			RuleFor(subproducto => subproducto["longitud"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'longitud' to type " + typeof(String)).MaximumLength(30);
			RuleFor(subproducto => subproducto["costo"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(decimal)); }).WithMessage("Error when trying to parse the property 'costo' to type " + typeof(decimal));
			RuleFor(subproducto => subproducto["acumulacionCostoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int64)); }).WithMessage("Error when trying to parse the property 'acumulacionCostoid' to type " + typeof(Int64));
			RuleFor(subproducto => subproducto["renglon"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'renglon' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["ubicacionGeografica"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ubicacionGeografica' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["fechaInicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaInicio' to type " + typeof(DateTime));
			RuleFor(subproducto => subproducto["fechaFin"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaFin' to type " + typeof(DateTime));
			RuleFor(subproducto => subproducto["duracion"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'duracion' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["duracionDimension"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'duracionDimension' to type " + typeof(String)).MaximumLength(1);
			RuleFor(subproducto => subproducto["orden"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'orden' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["treepath"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(String)); }).WithMessage("Error when trying to parse the property 'treepath' to type " + typeof(String)).MaximumLength(1000);
			RuleFor(subproducto => subproducto["nivel"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'nivel' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["ejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'ejercicio' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["entidad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'entidad' to type " + typeof(Int32));
			RuleFor(subproducto => subproducto["fechaInicioReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaInicioReal' to type " + typeof(DateTime));
			RuleFor(subproducto => subproducto["fechaFinReal"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(DateTime)); }).WithMessage("Error when trying to parse the property 'fechaFinReal' to type " + typeof(DateTime));
			RuleFor(subproducto => subproducto["inversionNueva"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must(subproducto => { return GenericValidatorType.ValidateType(subproducto, typeof(Int32)); }).WithMessage("Error when trying to parse the property 'inversionNueva' to type " + typeof(Int32));
			
		}
	}
}
