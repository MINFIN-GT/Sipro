using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SUnidadEjecutora.Controllers
{
    /// <summary>
    /// A class which represents the UnidadEjecutoraValidator.
	/// Generated by SIPRO TEAM. May 2018. 
    /// </summary>

	public class UnidadEjecutoraValidator : AbstractValidator<JObject>
	{
		public UnidadEjecutoraValidator() 
		{
			RuleFor(unidad_ejecutora => unidad_ejecutora["unidadEjecutora"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((unidad_ejecutora, type) => { return GenericValidatorType.ValidateType(unidad_ejecutora["unidadEjecutora"].ToString(), typeof(Int32)); });
			RuleFor(unidad_ejecutora => unidad_ejecutora["nombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((unidad_ejecutora, type) => { return GenericValidatorType.ValidateType(unidad_ejecutora["nombre"].ToString(), typeof(String)); }).MaximumLength(1000);
			RuleFor(unidad_ejecutora => unidad_ejecutora["entidadentidad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((unidad_ejecutora, type) => { return GenericValidatorType.ValidateType(unidad_ejecutora["entidadentidad"].ToString(), typeof(Int32)); });
			RuleFor(unidad_ejecutora => unidad_ejecutora["ejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((unidad_ejecutora, type) => { return GenericValidatorType.ValidateType(unidad_ejecutora["ejercicio"].ToString(), typeof(Int32)); });
			
		}
	}
}
