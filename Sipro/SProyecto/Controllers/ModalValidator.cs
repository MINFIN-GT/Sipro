using System;
using FluentValidation;
using Newtonsoft.Json.Linq;
using Utilities;

namespace SProyecto.Controllers
{
    /// <summary>
    /// A class which represents the ProyectoValidator.
    /// Generated by SIPRO TEAM. May 2018. 
    /// </summary>
    
    public class ModalValidator : AbstractValidator<JObject>
    {
        public ModalValidator()
        {
            RuleFor(modal => modal["id"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((modal, type) => { return GenericValidatorType.ValidateType(modal["id"].ToString(), typeof(Int32)); });
            RuleFor(modal => modal["nombre"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((modal, type) => { return GenericValidatorType.ValidateType(modal["nombre"].ToString(), typeof(String)); }).MaximumLength(2000);
            RuleFor(modal => modal["ejercicio"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((modal, type) => { return GenericValidatorType.ValidateType(modal["ejercicio"].ToString(), typeof(Int32)); });
            RuleFor(modal => modal["unidadejecutoraid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((modal, type) => { return GenericValidatorType.ValidateType(modal["unidadejecutoraid"].ToString(), typeof(Int32)); });
            RuleFor(modal => modal["entidad"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((modal, type) => { return GenericValidatorType.ValidateType(modal["entidad"].ToString(), typeof(Int32)); });
            RuleFor(modal => modal["proyectotipoid"].ToString()).Cascade(CascadeMode.StopOnFirstFailure).NotEmpty().Must((modal, type) => { return GenericValidatorType.ValidateType(modal["proyectotipoid"].ToString(), typeof(Int32)); });

        }
    }
}
